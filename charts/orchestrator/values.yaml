tags:
  openshift: true
  kubernetes: false
  
sonataFlowOperator:
  enabled: true

serverlessOperator:
  enabled: true

workflows:
  enabled: true

# override Janus image with one with the orchestrator plugin
backstage:
  global:
    # added value when using with kubernetes tag
    host: localhost
    dynamic:
      includes:
        - dynamic-plugins.default.yaml
      plugins:
        - disabled: false
          integrity: >-
            sha512-iVywjs0wOSgTFRV0n9k70+vkl92JF6jJaemqkIrooZAix1v8MiklsQe83bRrcASOh6SnQDbTIils+FHAWjV+qQ==
          package: "@janus-idp/backstage-plugin-orchestrator-backend-dynamic@1.0.2"
          pluginConfig:
            orchestrator:
              dataIndexService:
                url: http://sonataflow-platform-data-index-service.sonataflow-infra
              editor:
                path: "https://sandbox.kie.org/swf-chrome-extension/0.32.0"
        - disabled: false
          integrity: >-
            sha512-Lmma6or08EnlM5va95VSz/P9sVbXZTA95kHs9JHjaZfdbcEj7J2oTjYXdKG+fd4yfVdl0tD7/QP9cfYCY98UIg==
          package: "@janus-idp/backstage-plugin-orchestrator@1.1.1"
          pluginConfig:
            dynamicPlugins:
              frontend:
                janus-idp.backstage-plugin-orchestrator:
                  appIcons:
                    - importName: OrchestratorIcon
                      module: OrchestratorPlugin
                      name: orchestratorIcon
                  dynamicRoutes:
                    - importName: OrchestratorPage
                      menuItem:
                        icon: orchestratorIcon
                        text: Orchestrator
                      module: OrchestratorPlugin
                      path: /orchestrator
        - disabled: false
          integrity: >-
            sha512-hjhsFz/+xjlAWcJMmR1FBmHOYfJSc+9VZLL5UYAE+gNH61+FfHEoA2dFnZ3RHj97qUuJmtgHxG3+kZCrTtaGuA==
          package: "@janus-idp/plugin-notifications@1.1.4"
          pluginConfig:
            dynamicPlugins:
              frontend:
                janus-idp.backstage-plugin-notifications:
                  appIcons:
                    - name: notificationsIcon
                      module: NotificationsPlugin
                      importName: NotificationsActiveIcon
                  dynamicRoutes:
                    - path: /notifications
                      importName: NotificationsPage
                      module: NotificationsPlugin
                      menuItem:
                        icon: notificationsIcon
                        text: Notifications
                      config:
                        pollingIntervalMs: 5000
        - disabled: false
          integrity: >-
            sha512-dlznNhYpbXIgEnet5kZbxguu3FNaj4r1EQqGbthTrRxuhELELdZasmNMqWCHFIMXVNlcMDaOVBwWlGt+JAB+bg==
          package: "@janus-idp/plugin-notifications-backend-dynamic@1.1.1"
  upstream:
    backstage:
      image:
        tag: next
      appConfig:
        integrations:
          github:
            - host: github.com
              token: "INSERT VALID TOKEN HERE"
        auth:
          environment: development
          providers:
            github:
              development:
                clientId: "INSERT VALID CLIENT ID HERE"
                clientSecret: "INSERT VALID CLIENT SECRET HERE"
        catalog:
          rules:
            - allow:
                [
                  Component,
                  System,
                  Group,
                  Resource,
                  Location,
                  Template,
                  API,
                  User,
                  Domain,
                ]
          locations:
            - type: url
              target: https://github.com/janus-idp/backstage-plugins/blob/main/plugins/notifications-backend/users.yaml
            - type: url
              target: https://github.com/parodos-dev/workflow-software-templates/blob/main/entities/workflow-resources.yaml
            - type: url
              target: https://github.com/parodos-dev/workflow-software-templates/blob/main/template/infrastructure/template.yaml
            - type: url
              target: https://github.com/parodos-dev/workflow-software-templates/blob/main/template/assessment/template.yaml
            - type: url
              target: https://github.com/janus-idp/software-templates/blob/main/showcase-templates.yaml
        backend:
          csp:
            frame-src:
              - "https://sandbox.kie.org"
          database:
            client: pg
            connection:
              password: ${POSTGRESQL_ADMIN_PASSWORD}
              user: postgres
              host: orchestrator-postgresql-hl.orchestrator.svc.cluster.local
              port: 5432
global:
  orchestrator:
    devmode: false # devmode runs sonataflow services in ephemeral mode (for a non-production use)
    namespace: sonataflow-infra # namespace where the data index, job service and workflows are deployed
    sonataPlatform:
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "500m"
      dataIndex:
        image: "quay.io/kiegroup/kogito-data-index-postgresql-nightly:latest" # To be removed when stable version is released
      jobService:
        image: "quay.io/kiegroup/kogito-jobs-service-postgresql-nightly:latest" # To be removed when stable version is released
    sonataflows: # workflows to get deployed - this option will be removed once the plugin will interact directly with the data-index
      - name: greeting
        image: quay.io/orchestrator/serverless-workflow-greeting:latest
